openapi: 3.0.0
info:
  title: Musync
  version: 1.0.0
servers:
  - url: http://localhost:3001
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Public
  - name: Public > Auth
  - name: Public > Songs
  - name: Public > Admin
paths:
  /api/users/login:
    post:
      tags:
        - Public > Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aayushpandey616@gmail.com
                password: VerySecretPassword@123
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: '{{apisecret}}'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '644'
            ETag:
              schema:
                type: string
                example: W/"284-onFLM100sW9LDydCcDpnMjr9ejc"
            Date:
              schema:
                type: string
                example: Sun, 19 Nov 2023 13:20:07 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                data:
                  user:
                    _id: 655a0b6574a5f80df3d24b98
                    username: alexxy
                    email: aayushpandey616@gmail.com
                    profilePic: https://i.imgur.com/Eyzrkg3.jpeg
                    verified: true
                    type: manual
                    otp: null
                    createdAt: '2023-11-19T13:19:33.127Z'
                    __v: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NWEwYjY1NzRhNWY4MGRmM2QyNGI5OCIsInVzZXJuYW1lIjoiYWxleHh5IiwidHlwZSI6Im1hbnVhbCIsInByb2ZpbGVQaWMiOiJodHRwczovL2kuaW1ndXIuY29tL0V5enJrZzMuanBlZyIsImVtYWlsIjoiYWF5dXNocGFuZGV5NjE2QGdtYWlsLmNvbSIsImlhdCI6MTcwMDQwMDAwNywiZXhwIjoxNzAxMDA0ODA3fQ.zXIatb4qms8nP9Mo-eEXEuYKUX9f3YegbnMYWf59_Tw
                message: User logged in successfully!
  /api/users/signup:
    post:
      tags:
        - Public > Auth
      summary: Signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aayushpandey616@gmail.com
                password: VerySecretPassword@123
                confirmPassword: VerySecretPassword@123
                username: alexxy
                type: manual
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: '{{apisecret}}'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '245'
            ETag:
              schema:
                type: string
                example: W/"f5-hYy59r6Wy5tFA7GiRj8yqdTVrxE"
            Date:
              schema:
                type: string
                example: Sun, 19 Nov 2023 13:19:36 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                data:
                  _id: 655a0b6574a5f80df3d24b98
                  username: alexxy
                  email: aayushpandey616@gmail.com
                  profilePic: https://i.imgur.com/Eyzrkg3.jpeg
                  verified: false
                  type: manual
                message: OTP sent to your email please verify!
  /api/users/otpValidator:
    post:
      tags:
        - Public > Auth
      summary: Signup OTP Validator
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aayushpandey616@gmail.com
                otp: PC85OR
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: '{{apisecret}}'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '55'
            ETag:
              schema:
                type: string
                example: W/"37-8OvKtOmvqCGQofXWrYB/ebrYbxs"
            Date:
              schema:
                type: string
                example: Sun, 19 Nov 2023 13:16:58 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                message: OTP verified successfully!
  /api/users/forgotPasswordOTP:
    post:
      tags:
        - Public > Auth
      summary: Forgot Passwor OTP Sender
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aayushpandey616@gmail.com
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: '{{apisecret}}'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '52'
            ETag:
              schema:
                type: string
                example: W/"34-FLuCn87VXEpDvebpV4UZUqbceDI"
            Date:
              schema:
                type: string
                example: Sun, 19 Nov 2023 13:20:47 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                message: OTP sent to your email!
  /api/users/forgotPassword:
    post:
      tags:
        - Public > Auth
      summary: Forgot Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aayushpandey616@gmail.com
                otp: WE78PK
                newPassword: VerySecretPassword@123
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: '{{apisecret}}'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '59'
            ETag:
              schema:
                type: string
                example: W/"3b-xe1RWVR7zsFcIMt1e6yC73508wY"
            Date:
              schema:
                type: string
                example: Sun, 19 Nov 2023 13:21:14 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                message: Password updated successfully!
  /api/users/uploadProfilePic:
    post:
      tags:
        - Public > Auth
      summary: Upload Profile Pic
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profilePic:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: '{{apisecret}}'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '332'
            ETag:
              schema:
                type: string
                example: W/"14c-Bt/1XG4ZOVxa+8Crj5cdkiq/JoQ"
            Date:
              schema:
                type: string
                example: Sun, 19 Nov 2023 13:20:25 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                data:
                  _id: 655a0b6574a5f80df3d24b98
                  username: alexxy
                  email: aayushpandey616@gmail.com
                  profilePic: >-
                    public\uploads\alexxy\profilePic\db55d61e1b6c2f47aca75e73c8e6c0b4.jpg
                  verified: true
                  type: manual
                  otp: null
                  createdAt: '2023-11-19T13:19:33.127Z'
                  __v: 0
                message: File uploaded successfully
  /api/users/deleteUser:
    post:
      tags:
        - Public > Auth
      summary: Delete User
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: '{{apisecret}}'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '57'
            ETag:
              schema:
                type: string
                example: W/"39-sZPh74kIw8O+sZquuL306iLUX2s"
            Date:
              schema:
                type: string
                example: Sun, 19 Nov 2023 13:14:16 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                message: Profile deleted successfully
  /api/users/loginWithToken:
    get:
      tags:
        - Public > Auth
      summary: LoginWithToken
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: '{{apisecret}}'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '674'
            ETag:
              schema:
                type: string
                example: W/"2a2-syC3uTaBVaTBgXFA+G6BvEWi7h4"
            Date:
              schema:
                type: string
                example: Sun, 19 Nov 2023 13:21:24 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                data:
                  user:
                    _id: 655a0b6574a5f80df3d24b98
                    username: alexxy
                    email: aayushpandey616@gmail.com
                    profilePic: >-
                      public\uploads\alexxy\profilePic\db55d61e1b6c2f47aca75e73c8e6c0b4.jpg
                    verified: true
                    type: manual
                    createdAt: '2023-11-19T13:19:33.127Z'
                    __v: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NWEwYTNhNzRhNWY4MGRmM2QyNGI4OSIsInVzZXJuYW1lIjoiYWxleHh5IiwidHlwZSI6Im1hbnVhbCIsInByb2ZpbGVQaWMiOiJodHRwczovL2kuaW1ndXIuY29tL0V5enJrZzMuanBlZyIsImVtYWlsIjoiYWF5dXNocGFuZGV5NjE2QGdtYWlsLmNvbSIsImlhdCI6MTcwMDM5OTkwMCwiZXhwIjoxNzAxMDA0NzAwfQ.0hi09gTcGAL2flsq64QSlFO5cWIxaOvVuzlA3XoT85U
                message: User logged in successfully!
  /api/music/getAllSongs:
    get:
      tags:
        - Public > Songs
      summary: Get All Public Songs
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllPublicSongs:
    get:
      tags:
        - Public > Songs
      summary: Get User Songs
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllFolders:
    get:
      tags:
        - Public > Songs
      summary: Get User Folders
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '401':
          description: Successful response
          content:
            application/json: {}
  /api/music/getFolderSongs:
    post:
      tags:
        - Public > Songs
      summary: Get User Folders Songs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                folderUrl: >-
                  public/uploads/alexxy/sdk_gphone64_x86_64/Music/Download/Shazam
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '401':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllFolderWithSongs:
    get:
      tags:
        - Public > Songs
      summary: 'Get User Folders With Songs '
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllAlbums:
    get:
      tags:
        - Public > Songs
      summary: Get User Albums
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '401':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllAlbumWithSongs:
    get:
      tags:
        - Public > Songs
      summary: Get User Albums With Songs
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '401':
          description: Successful response
          content:
            application/json: {}
  /api/music/deleteSong:
    post:
      tags:
        - Public > Songs
      summary: Delete Song
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                songId: 1000000178
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllArtistWithSongs:
    get:
      tags:
        - Public > Songs
      summary: Get User Artist With Songs
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getUserPublicSongs:
    get:
      tags:
        - Public > Songs
      summary: Get User Public Songs
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/getListofUsers:
    get:
      tags:
        - Public > Admin
      summary: List of Users
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/getUserData:
    get:
      tags:
        - Public > Admin
      summary: Get User Data
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
