openapi: 3.0.0
info:
  title: Musync
  version: 1.0.0
servers:
  - url: http://localhost:3001
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Public
  - name: Public > Auth
  - name: Public > Songs
  - name: Public > Admin
paths:
  /api/users/login:
    post:
      tags:
        - Public > Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aayushpandey616@gmail.com
                password: VerySecretPassword@123
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '669'
            ETag:
              schema:
                type: string
                example: W/"29d-aHf4RSk+gEagCylnPRif6xzBJMA"
            Date:
              schema:
                type: string
                example: Sat, 30 Sep 2023 08:44:51 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                data:
                  user:
                    _id: 6517dfbe345ee8f0da29a9b1
                    username: alexxy
                    email: aayushpandey616@gmail.com
                    password: >-
                      $2a$12$12l127hOC/4ZuPaO6fWBU.H6ZHiSNSkgUe1o4r.oyER4JpudpswZu
                    profilePic: https://i.imgur.com/Eyzrkg3.jpeg
                    verified: false
                    type: manual
                    __v: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTdkZmJlMzQ1ZWU4ZjBkYTI5YTliMSIsInVzZXJuYW1lIjoiYWxleHh5IiwidHlwZSI6Im1hbnVhbCIsInByb2ZpbGVQaWMiOiJodHRwczovL2kuaW1ndXIuY29tL0V5enJrZzMuanBlZyIsImVtYWlsIjoiYWF5dXNocGFuZGV5NjE2QGdtYWlsLmNvbSIsImlhdCI6MTY5NjA2MzQ5MSwiZXhwIjoxNjk2NjY4MjkxfQ.9pBxnNrHjxx1uEOhizfABkjnvJFZQryU_3wSrMzCxQQ
                message: User logged in successfully!
  /api/users/signup:
    post:
      tags:
        - Public > Auth
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aayushpandey616@gmail.com
                password: VerySecretPassword@123
                confirmPassword: VerySecretPassword@123
                username: alexxy
                type: manual
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '316'
            ETag:
              schema:
                type: string
                example: W/"13c-PouUk+Nw70O48/wDgiytirCl+bQ"
            Date:
              schema:
                type: string
                example: Sat, 30 Sep 2023 08:43:42 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                data:
                  username: alexxy
                  email: aayushpandey616@gmail.com
                  password: $2a$12$12l127hOC/4ZuPaO6fWBU.H6ZHiSNSkgUe1o4r.oyER4JpudpswZu
                  profilePic: https://i.imgur.com/Eyzrkg3.jpeg
                  verified: false
                  type: manual
                  _id: 6517dfbe345ee8f0da29a9b1
                  __v: 0
                message: User created successfully!
  /api/users/loginWithToken:
    get:
      tags:
        - Public > Auth
      summary: LoginWithToken
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '669'
            ETag:
              schema:
                type: string
                example: W/"29d-aHf4RSk+gEagCylnPRif6xzBJMA"
            Date:
              schema:
                type: string
                example: Sat, 30 Sep 2023 08:45:12 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                data:
                  user:
                    _id: 6517dfbe345ee8f0da29a9b1
                    username: alexxy
                    email: aayushpandey616@gmail.com
                    password: >-
                      $2a$12$12l127hOC/4ZuPaO6fWBU.H6ZHiSNSkgUe1o4r.oyER4JpudpswZu
                    profilePic: https://i.imgur.com/Eyzrkg3.jpeg
                    verified: false
                    type: manual
                    __v: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MTdkZmJlMzQ1ZWU4ZjBkYTI5YTliMSIsInVzZXJuYW1lIjoiYWxleHh5IiwidHlwZSI6Im1hbnVhbCIsInByb2ZpbGVQaWMiOiJodHRwczovL2kuaW1ndXIuY29tL0V5enJrZzMuanBlZyIsImVtYWlsIjoiYWF5dXNocGFuZGV5NjE2QGdtYWlsLmNvbSIsImlhdCI6MTY5NjA2MzQ5MSwiZXhwIjoxNjk2NjY4MjkxfQ.9pBxnNrHjxx1uEOhizfABkjnvJFZQryU_3wSrMzCxQQ
                message: User logged in successfully!
  /api/users/uploadProfilePic:
    post:
      tags:
        - Public > Auth
      summary: Upload Profile Pic
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profilePic:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '357'
            ETag:
              schema:
                type: string
                example: W/"165-o8aPx8H17vfZnolCndKisWM24nY"
            Date:
              schema:
                type: string
                example: Sat, 30 Sep 2023 08:45:35 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                data:
                  _id: 6517dfbe345ee8f0da29a9b1
                  username: alexxy
                  email: aayushpandey616@gmail.com
                  password: $2a$12$12l127hOC/4ZuPaO6fWBU.H6ZHiSNSkgUe1o4r.oyER4JpudpswZu
                  profilePic: >-
                    public\uploads\alexxy\profilePic\256108fbfc46b9a5941bd5cd317ef8cb.png
                  verified: false
                  type: manual
                  __v: 0
                message: File uploaded successfully
  /api/users/deleteUser:
    post:
      tags:
        - Public > Auth
      summary: Delete User
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '42'
            ETag:
              schema:
                type: string
                example: W/"2a-TkGcC/0+lkh26Mo7bHbw30135PA"
            Date:
              schema:
                type: string
                example: Sat, 30 Sep 2023 08:46:03 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                message: Profile deleted successfully
  /api/music/getAllSongs:
    get:
      tags:
        - Public > Songs
      summary: Get All Public Songs
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllPublicSongs:
    get:
      tags:
        - Public > Songs
      summary: Get User Songs
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllFolders:
    get:
      tags:
        - Public > Songs
      summary: Get User Folders
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '401':
          description: Successful response
          content:
            application/json: {}
  /api/music/getFolderSongs:
    post:
      tags:
        - Public > Songs
      summary: Get User Folders Songs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                folderUrl: >-
                  public/uploads/alexxy/sdk_gphone64_x86_64/Music/Download/Shazam
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '401':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllFolderWithSongs:
    get:
      tags:
        - Public > Songs
      summary: 'Get User Folders With Songs '
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllAlbums:
    get:
      tags:
        - Public > Songs
      summary: Get User Albums
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '401':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllAlbumWithSongs:
    get:
      tags:
        - Public > Songs
      summary: Get User Albums With Songs
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '401':
          description: Successful response
          content:
            application/json: {}
  /api/music/deleteSong:
    post:
      tags:
        - Public > Songs
      summary: Delete Song
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                songId: 1000000178
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getAllArtistWithSongs:
    get:
      tags:
        - Public > Songs
      summary: Get User Artist With Songs
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/music/getUserPublicSongs:
    get:
      tags:
        - Public > Songs
      summary: Get User Public Songs
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/getListofUsers:
    get:
      tags:
        - Public > Admin
      summary: List of Users
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/getUserData:
    get:
      tags:
        - Public > Admin
      summary: Get User Data
      security:
        - bearerAuth: []
      parameters:
        - name: apisecret
          in: header
          schema:
            type: string
          example: Apple
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
